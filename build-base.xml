<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" basedir="." name="build-base">

    <property environment="env" />

    <dirname property="build.base.dir" file="${ant.file.build-base}" />
    <property file="${build.base.dir}/defaultBuildProps.properties" />

    <property name="ivy.install.version" value="2.1.0" />
    <property name="ant.lib.dir" value="${user.home}/.ant/lib" />
    <property name="ivy.jar.file" value="${ant.lib.dir}/ivy-${ivy.install.version}.jar" />
    <property name="ivy.repo" value="https://www.owfgoss.org/svn/repos/ozone/ivy-repo" />
    <property name='svnant.this.url' value='${ivy.repo}/no-namespace' />
    <property name='svn.ozone.baseline' value="https://www.owfgoss.org/svn/repos/ozone/baseline" />
    <property name='release.dir' value="${user.home}/.ivy2/release/" />
    <dirname property="imported.basedir" file="${ant.file.build-base}" />

    <condition property="ivysettings.file" value="ivysettings_offline.xml" else="ivysettings.xml">
        <isset property="disconnected" />
    </condition>

    <condition property="offline.repo" value="${env.OFFLINE_REPO}" else="">
        <isset property="env.OFFLINE_REPO" />
    </condition>
    <available property="release.dir.svn.available" file="${release.dir}/no-namespace/.svn" />
    <condition property="ant.initialized">
        <and>
            <available file="${ivy.jar.file}" />
            <available file="${ant.lib.dir}/ganymed.jar" />
            <available file="${ant.lib.dir}/svnant.jar" />
            <available file="${ant.lib.dir}/svnClientAdapter.jar" />
            <available file="${ant.lib.dir}/svnjavahl.jar" />
            <available file="${ant.lib.dir}/svnkit.jar" />
            <available file="${ant.lib.dir}/ant-contrib-1.0b3.jar" />
        </and>
    </condition>

    <target name="setup-ant" unless="ant.initialized">
        <copy todir="${ant.lib.dir}" >
            <fileset dir="${build.base.dir}/build-libs" />
        </copy>
    </target>

    <target name="init-ivy" depends='setup-ant'>
        <ivy:settings file="${build.base.dir}/${ivysettings.file}" id='ivy.settings' />
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant"
                 classpath="${ant.lib.dir}/ivy-${ivy.install.version}.jar" />
        <taskdef resource="net/sf/antcontrib/antlib.xml"
                 classpath="${ant.lib.dir}/ant-contrib-1.0b3.jar" />
        <ivy:settings file="${build.base.dir}/${ivysettings.file}" id='ivy.settings' />
        <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" >
            <classpath>
                <fileset dir="${ant.lib.dir}" >
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </typedef>
    </target>

    <condition property="grailstask" value="win_grails" else="linux_grails">
        <contains string="${os.name}" substring="windows" casesensitive="false" />
    </condition>

    <condition property="linux" >
        <not>
            <contains string="${os.name}" substring="windows" casesensitive="false" />
        </not>
    </condition>

    <target name="win_grails">
        <exec executable="cmd" failonerror="true">
            <arg value="/c" />
            <arg value="grails ${gscript} ${gargs}" />
        </exec>
    </target>

    <target name="linux_grails">
        <exec executable="grails" failonerror="true">
            <arg value="${gscript}" />
            <arg value="${gargs}" />
        </exec>
    </target>

    <macrodef name="grails">
        <attribute name="script" />
        <attribute name="args" default="" />
        <sequential>
            <antcall target="${grailstask}">
                <param name="gscript" value="@{script}" />
                <param name="gargs" value="@{args}" />
            </antcall>
        </sequential>
    </macrodef>

    <target name="setpermissions" if="linux">
        <exec executable="chmod" failonerror="false">
            <arg value="775" />
            <arg value="${shellFile}" />
        </exec>
    </target>

    <target name="stage-tomcat">
        <ivy:retrieve pattern="${bundle.dir}/[artifact]-[revision].[ext]" />
        <unzip src="${bundle.dir}/${tomcat.custom.module}-${tomcat.custom.rev}.zip" dest="${bundle.dir}" />
        <delete file="${bundle.dir}/${tomcat.custom.module}-${tomcat.custom.rev}.zip" />
    </target>

</project>
